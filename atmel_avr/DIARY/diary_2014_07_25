2014_07_25 et 2014_07_27

OBJECTIFS:
- écrire blink_led.c
- écrire build.sh, program_mcu.sh, clean.sh
- écrire Makefile
- [ok] tester les 2 autres programmeur
    - écrire build.sh, program_mcu.sh, clean.sh
    - écrire Makefile
- [ok] souder programming spider
- schematics (fritzing)

NOTES:
- http://www.nongnu.org/avr-libc/user-manual/group__demo__project.html
- http://www.micahcarrick.com/tutorials/avr-microcontroller-tutorial/getting-started.html
- http://www.nongnu.org/avr-libc/user-manual/FAQ.html
- http://en.wikipedia.org/wiki/Intel_HEX

NOTES CONCERNANT http://www.nongnu.org/avr-libc/user-manual/group__demo__project.html:
- les atmega 48:88/168 sont les successeurs du ATmega8
- créer un fichier objet demo.o:
  avr-gcc -g -Os -mmcu=... -c demo.c
  -g : pas indispensable (ne se retrouvera pas dans le .hex final de toute
       façon) mais le segment .info qu'il génère facilite le désassemblage pour une
       analyse du binaire généré sur le PC
  -c : compile and stop ; don't link
- linker les fichiers objets dans un binaire ELF
  avr-gcc -g -mmcu=... -o demo.elf demo.o
  (rem: -mmcu est nécessaire dans la phase de link aussi pour pouvoir choisir les "startup files" et les "runtime libraries")
- afficher la taille des différentes sections de l'exécutable:
  avr-objdump -h demo.elf
- désassembler l'executable:
  avr-objdump -h -S demo.elf > demo.lst
  (rem: "avr-objdump -S" est préférable à "avr-gcc -S" car avec le premier, on
  a le code du binaire complet/linké avec les routines de la librarie, etc. ->
  ça reflète ce qui est vraiment dans le MCU)
- "linker map file", durant la phase de link:
  avr-gcc -g -mmcu=... -Wl,-Map,demo.map -o demo.elf demo.o
  (rem: permet d'avoir des infos supplémentaires comme la provenance des modules, etc.)
- principaux segments:
  .text = instruction code (in flash memory)
  .data = "initialized data"
  .bss = "uninitialized data"
  .eeprom = eeprom memory
- Most (if not all) programmers will not accept a GNU executable as an input
  file -> convertir le binaire ELF en Intel HEX format (compris par les
  programmeur ISP).
  The ROM contents can be pulled from our project's binary and put into the
  file demo.hex using the following command:
  avr-objcopy -j .text -j .data -O ihex demo.elf demo.hex
  (rem: the -j option indicates that we want the information from the .text and
  .data segment extracted)

NOTES CONCERNANT http://www.nongnu.org/avr-libc/user-manual/FAQ.html:
- est-ce qu'on peut écrire en C++ pour l'AVR ?
  oui (remplacer "avr-gcc" par "avr-c++") mais la bibliothèque standard
  libstdc++ n'est pas supportée => aucune des fonctions/classes/templates
  standard ne sont supportées (vector, etc.).
  De même, les opérateurs new et delete ne sont pas supportés de même que
  les exceptions...
  => l'intérêt est très limité (pour ne pas dire nul)...
- The most universal "best" opimization level:
  -Os -mcall-prologues
  (rem: "-mcall-prologues" n'est pas indispensable mais il est généralement
  utilisé pour réduire encore un peu plus la taille du segment .text dans le
  binaire).
- certains ATtinyXX ne peuvent pas être programmés en C car ils n'ont pas de
  "RAM based stack", mais les tiny45, 85, 44, 13 sont ok ; cf. la liste
  complète sur http://www.nongnu.org/avr-libc/user-manual/index.html

NOTES:
- température du fer à souder: entre 300°C et 350°C
- liste des MCU avr-gcc et avrdude:
  avr-gcc --target-help
  
      Known MCU names:
      at43usb320 at43usb355 at76c711 at86rf401 at90c8534 at90can128 at90can32
      at90can64 at90pwm1 at90pwm2 at90pwm216 at90pwm2b at90pwm3 at90pwm316
      at90pwm3b at90pwm81 at90s1200 at90s2313 at90s2323 at90s2333 at90s2343
      at90s4414 at90s4433 at90s4434 at90s8515 at90s8535 at90scr100 at90usb1286
      at90usb1287 at90usb162 at90usb646 at90usb647 at90usb82 at94k ata6289
      atmega103 atmega128 atmega1280 atmega1281 atmega1284p atmega128rfa1 atmega16
      atmega161 atmega162 atmega163 atmega164a atmega164p atmega165 atmega165a
      atmega165p atmega168 atmega168a atmega168p atmega169 atmega169a atmega169p
      atmega169pa atmega16a atmega16hva atmega16hva2 atmega16hvb atmega16m1
      atmega16u2 atmega16u4 atmega2560 atmega2561 atmega32 atmega323 atmega324a
      atmega324p atmega324pa atmega325 atmega3250 atmega3250a atmega3250p
      atmega325a atmega325p atmega328 atmega328p atmega329 atmega3290 atmega3290a
      atmega3290p atmega329a atmega329p atmega329pa atmega32c1 atmega32hvb
      atmega32m1 atmega32u2 atmega32u4 atmega32u6 atmega406 atmega48 atmega48a
      atmega48p atmega64 atmega640 atmega644 atmega644a atmega644p atmega644pa
      atmega645 atmega6450 atmega6450a atmega6450p atmega645a atmega645p atmega649
      atmega6490 atmega649a atmega649p atmega64c1 atmega64hve atmega64m1 atmega8
      atmega8515 atmega8535 atmega88 atmega88a atmega88p atmega88pa atmega8hva
      atmega8u2 attiny11 attiny12 attiny13 attiny13a attiny15 attiny167 attiny22
      attiny2313 attiny2313a attiny24 attiny24a attiny25 attiny26 attiny261
      attiny261a attiny28 attiny4313 attiny43u attiny44 attiny44a attiny45
      attiny461 attiny461a attiny48 attiny84 attiny84a attiny85 attiny861
      attiny861a attiny87 attiny88 atxmega128a1 atxmega128a1u atxmega128a3
      atxmega128d3 atxmega16a4 atxmega16d4 atxmega16x1 atxmega192a3 atxmega192d3
      atxmega256a3 atxmega256a3b atxmega256a3bu atxmega256d3 atxmega32a4
      atxmega32d4 atxmega32x1 atxmega64a1 atxmega64a1u atxmega64a3 atxmega64d3
      avr1 avr2 avr25 avr3 avr31 avr35 avr4 avr5 avr51 avr6 avrxmega2 avrxmega4
      avrxmega5 avrxmega6 avrxmega7 m3000

  avrdude -p ?

      t10  = ATtiny10        [/etc/avrdude.conf:16881]
      t9   = ATtiny9         [/etc/avrdude.conf:16837]
      t5   = ATtiny5         [/etc/avrdude.conf:16793]
      t4   = ATtiny4         [/etc/avrdude.conf:16749]
      ucr2 = 32UC3A0512      [/etc/avrdude.conf:16728]
      x128a4 = ATXMEGA128A4    [/etc/avrdude.conf:16630]
      x64a4 = ATXMEGA64A4     [/etc/avrdude.conf:16533]
      x32a4 = ATXMEGA32A4     [/etc/avrdude.conf:16436]
      x16a4 = ATXMEGA16A4     [/etc/avrdude.conf:16339]
      x256a3b = ATXMEGA256A3B   [/etc/avrdude.conf:16242]
      x256a3 = ATXMEGA256A3    [/etc/avrdude.conf:16145]
      x192a3 = ATXMEGA192A3    [/etc/avrdude.conf:16048]
      x128a3 = ATXMEGA128A3    [/etc/avrdude.conf:15951]
      x64a3 = ATXMEGA64A3     [/etc/avrdude.conf:15854]
      x256a1 = ATXMEGA256A1    [/etc/avrdude.conf:15757]
      x192a1 = ATXMEGA192A1    [/etc/avrdude.conf:15660]
      x128a1d = ATXMEGA128A1REVD [/etc/avrdude.conf:15563]
      x128a1 = ATXMEGA128A1    [/etc/avrdude.conf:15466]
      x64a1 = ATXMEGA64A1     [/etc/avrdude.conf:15369]
      m6450 = ATMEGA6450      [/etc/avrdude.conf:15180]
      m3250 = ATMEGA3250      [/etc/avrdude.conf:14991]
      m645 = ATMEGA645       [/etc/avrdude.conf:14802]
      m325 = ATMEGA325       [/etc/avrdude.conf:14613]
      m8u2 = ATmega8U2       [/etc/avrdude.conf:14434]
      m16u2 = ATmega16U2      [/etc/avrdude.conf:14249]
      m32u2 = ATmega32U2      [/etc/avrdude.conf:14064]
      usb82 = AT90USB82       [/etc/avrdude.conf:13878]
      usb162 = AT90USB162      [/etc/avrdude.conf:13694]
      usb1287 = AT90USB1287     [/etc/avrdude.conf:13505]
      usb1286 = AT90USB1286     [/etc/avrdude.conf:13316]
      usb647 = AT90USB647      [/etc/avrdude.conf:13128]
      usb646 = AT90USB646      [/etc/avrdude.conf:12939]
      m32u4 = ATmega32U4      [/etc/avrdude.conf:12751]
      t84  = ATtiny84        [/etc/avrdude.conf:12568]
      t44  = ATtiny44        [/etc/avrdude.conf:12386]
      t24  = ATtiny24        [/etc/avrdude.conf:12204]
      m128rfa1 = ATMEGA128RFA1   [/etc/avrdude.conf:12016]
      m2561 = ATMEGA2561      [/etc/avrdude.conf:11822]
      m2560 = ATMEGA2560      [/etc/avrdude.conf:11629]
      m1281 = ATMEGA1281      [/etc/avrdude.conf:11441]
      m1280 = ATMEGA1280      [/etc/avrdude.conf:11252]
      m640 = ATMEGA640       [/etc/avrdude.conf:11064]
      t85  = ATtiny85        [/etc/avrdude.conf:10883]
      t45  = ATtiny45        [/etc/avrdude.conf:10704]
      t25  = ATtiny25        [/etc/avrdude.conf:10524]
      pwm3b = AT90PWM3B       [/etc/avrdude.conf:10343]
      pwm2b = AT90PWM2B       [/etc/avrdude.conf:10160]
      pwm3 = AT90PWM3        [/etc/avrdude.conf:9977]
      pwm2 = AT90PWM2        [/etc/avrdude.conf:9793]
      t4313 = ATtiny4313      [/etc/avrdude.conf:9611]
      t2313 = ATtiny2313      [/etc/avrdude.conf:9424]
      m328p = ATMEGA328P      [/etc/avrdude.conf:9236]
      t88  = attiny88        [/etc/avrdude.conf:9050]
      m168p = ATMEGA168P      [/etc/avrdude.conf:8862]
      m168 = ATMEGA168       [/etc/avrdude.conf:8674]
      m88p = ATMEGA88P       [/etc/avrdude.conf:8487]
      m88  = ATMEGA88        [/etc/avrdude.conf:8301]
      m48  = ATMEGA48        [/etc/avrdude.conf:8114]
      t861 = ATTINY861       [/etc/avrdude.conf:7926]
      t461 = ATTINY461       [/etc/avrdude.conf:7737]
      t261 = ATTINY261       [/etc/avrdude.conf:7548]
      t26  = ATTINY26        [/etc/avrdude.conf:7391]
      m8535 = ATMEGA8535      [/etc/avrdude.conf:7233]
      m8515 = ATMEGA8515      [/etc/avrdude.conf:7075]
      m8   = ATMEGA8         [/etc/avrdude.conf:6914]
      m161 = ATMEGA161       [/etc/avrdude.conf:6774]
      m32  = ATMEGA32        [/etc/avrdude.conf:6599]
      m6490 = ATMEGA6490      [/etc/avrdude.conf:6406]
      m649 = ATMEGA649       [/etc/avrdude.conf:6221]
      m3290p = ATMEGA3290P     [/etc/avrdude.conf:6038]
      m3290 = ATMEGA3290      [/etc/avrdude.conf:5853]
      m329p = ATMEGA329P      [/etc/avrdude.conf:5668]
      m329 = ATMEGA329       [/etc/avrdude.conf:5484]
      m169 = ATMEGA169       [/etc/avrdude.conf:5304]
      m163 = ATMEGA163       [/etc/avrdude.conf:5146]
      m162 = ATMEGA162       [/etc/avrdude.conf:4950]
      m1284p = ATMEGA1284P     [/etc/avrdude.conf:4760]
      m644p = ATMEGA644P      [/etc/avrdude.conf:4568]
      m644 = ATMEGA644       [/etc/avrdude.conf:4378]
      m324pa = ATmega324PA     [/etc/avrdude.conf:4187]
      m324p = ATMEGA324P      [/etc/avrdude.conf:3996]
      m164p = ATMEGA164P      [/etc/avrdude.conf:3805]
      m16  = ATMEGA16        [/etc/avrdude.conf:3627]
      c32  = AT90CAN32       [/etc/avrdude.conf:3436]
      c64  = AT90CAN64       [/etc/avrdude.conf:3246]
      c128 = AT90CAN128      [/etc/avrdude.conf:3056]
      m128 = ATMEGA128       [/etc/avrdude.conf:2878]
      m64  = ATMEGA64        [/etc/avrdude.conf:2697]
      m103 = ATMEGA103       [/etc/avrdude.conf:2557]
      8535 = AT90S8535       [/etc/avrdude.conf:2436]
      8515 = AT90S8515       [/etc/avrdude.conf:2322]
      4434 = AT90S4434       [/etc/avrdude.conf:2239]
      4433 = AT90S4433       [/etc/avrdude.conf:2115]
      2343 = AT90S2343       [/etc/avrdude.conf:1991]
      2333 = AT90S2333       [/etc/avrdude.conf:1863]
      2313 = AT90S2313       [/etc/avrdude.conf:1750]
      4414 = AT90S4414       [/etc/avrdude.conf:1637]
      1200 = AT90S1200       [/etc/avrdude.conf:1521]
      t15  = ATtiny15        [/etc/avrdude.conf:1388]
      t13  = ATtiny13        [/etc/avrdude.conf:1215]
      t12  = ATtiny12        [/etc/avrdude.conf:1082]
      t11  = ATtiny11        [/etc/avrdude.conf:1018]

- liste des programmeurs avrdude:
  avrdude -c ?

      Valid programmers are:
      c2n232i  = serial port banging, reset=dtr sck=!rts mosi=!txd miso=!cts [/etc/avrdude.conf:998]
      dasa3    = serial port banging, reset=!dtr sck=rts mosi=txd miso=cts [/etc/avrdude.conf:985]
      dasa     = serial port banging, reset=rts sck=dtr mosi=txd miso=cts [/etc/avrdude.conf:972]
      siprog   = Lancos SI-Prog <http://www.lancos.com/siprogsch.html> [/etc/avrdude.conf:959]
      ponyser  = design ponyprog serial, reset=!txd sck=rts mosi=dtr miso=cts [/etc/avrdude.conf:946]
      89isp    = Atmel at89isp cable            [/etc/avrdude.conf:913]
      frank-stk200 = Frank STK200                   [/etc/avrdude.conf:899]
      blaster  = Altera ByteBlaster             [/etc/avrdude.conf:886]
      ere-isp-avr = ERE ISP-AVR <http://www.ere.co.th/download/sch050713.pdf> [/etc/avrdude.conf:876]
      atisp    = AT-ISP V1.1 programming cable for AVR-SDK1 from <http://micro-research.co.th/>  [/etc/avrdude.conf:866]
      dapa     = Direct AVR Parallel Access cable [/etc/avrdude.conf:855]
      xil      = Xilinx JTAG cable              [/etc/avrdude.conf:842]
      futurlec = Futurlec.com programming cable. [/etc/avrdude.conf:824]
      abcmini  = ABCmini Board, aka Dick Smith HOTCHIP [/etc/avrdude.conf:814]
      picoweb  = Picoweb Programming Cable, http://www.picoweb.net/ [/etc/avrdude.conf:804]
      sp12     = Steve Bolt's Programmer        [/etc/avrdude.conf:793]
      alf      = Nightshade ALF-PgmAVR, http://nightshade.homeip.net/ [/etc/avrdude.conf:777]
      bascom   = Bascom SAMPLE programming cable [/etc/avrdude.conf:767]
      dt006    = Dontronics DT006               [/etc/avrdude.conf:757]
      pony-stk200 = Pony Prog STK200               [/etc/avrdude.conf:745]
      stk200   = STK200                         [/etc/avrdude.conf:729]
      bsd      = Brian Dean's Programmer, http://www.bsdhome.com/avrdude/ [/etc/avrdude.conf:718]
      pavr     = Jason Kyle's pAVR Serial Programmer [/etc/avrdude.conf:710]
      dragon_pdi = Atmel AVR Dragon in PDI mode   [/etc/avrdude.conf:703]
      dragon_dw = Atmel AVR Dragon in debugWire mode [/etc/avrdude.conf:695]
      dragon_hvsp = Atmel AVR Dragon in HVSP mode  [/etc/avrdude.conf:687]
      dragon_pp = Atmel AVR Dragon in PP mode    [/etc/avrdude.conf:679]
      dragon_isp = Atmel AVR Dragon in ISP mode   [/etc/avrdude.conf:671]
      dragon_jtag = Atmel AVR Dragon in JTAG mode  [/etc/avrdude.conf:663]
      jtag2pdi = Atmel JTAG ICE mkII PDI mode   [/etc/avrdude.conf:655]
      jtag2avr32 = Atmel JTAG ICE mkII im AVR32 mode [/etc/avrdude.conf:647]
      jtagmkII_avr32 = Atmel JTAG ICE mkII im AVR32 mode [/etc/avrdude.conf:639]
      jtag2dw  = Atmel JTAG ICE mkII in debugWire mode [/etc/avrdude.conf:631]
      jtag2isp = Atmel JTAG ICE mkII in ISP mode [/etc/avrdude.conf:623]
      jtag2    = Atmel JTAG ICE mkII            [/etc/avrdude.conf:615]
      jtag2fast = Atmel JTAG ICE mkII            [/etc/avrdude.conf:607]
      jtag2slow = Atmel JTAG ICE mkII            [/etc/avrdude.conf:599]
      jtag1    = Atmel JTAG ICE (mkI)           [/etc/avrdude.conf:576]
      jtagmkI  = Atmel JTAG ICE (mkI)           [/etc/avrdude.conf:568]
      butterfly_mk = Mikrokopter.de Butterfly       [/etc/avrdude.conf:562]
      mkbutterfly = Mikrokopter.de Butterfly       [/etc/avrdude.conf:556]
      avr911   = Atmel AppNote AVR911 AVROSP    [/etc/avrdude.conf:549]
      avr109   = Atmel AppNote AVR109 Boot Loader [/etc/avrdude.conf:543]
      butterfly = Atmel Butterfly Development Board [/etc/avrdude.conf:537]
      usbtiny  = USBtiny simple USB programmer, http://www.ladyada.net/make/usbtinyisp/ [/etc/avrdude.conf:531]
      usbasp   = USBasp, http://www.fischl.de/usbasp/ [/etc/avrdude.conf:525]
      avr910   = Atmel Low Cost Serial Programmer [/etc/avrdude.conf:519]
      stk600hvsp = Atmel STK600 in high-voltage serial programming mode [/etc/avrdude.conf:513]
      stk600pp = Atmel STK600 in parallel programming mode [/etc/avrdude.conf:507]
      stk600   = Atmel STK600                   [/etc/avrdude.conf:501]
      stk500hvsp = Atmel STK500 V2 in high-voltage serial programming mode [/etc/avrdude.conf:495]
      stk500pp = Atmel STK500 V2 in parallel programming mode [/etc/avrdude.conf:489]
      stk500v2 = Atmel STK500 Version 2.x firmware [/etc/avrdude.conf:483]
      mib510   = Crossbow MIB510 programming board [/etc/avrdude.conf:477]
      stk500v1 = Atmel STK500 Version 1.x firmware [/etc/avrdude.conf:471]
      stk500   = Atmel STK500                   [/etc/avrdude.conf:465]
      buspirate = The Bus Pirate                 [/etc/avrdude.conf:455]
      avrisp2  = Atmel AVR ISP mkII             [/etc/avrdude.conf:449]
      avrispmkII = Atmel AVR ISP mkII             [/etc/avrdude.conf:443]
      avrispv2 = Atmel AVR ISP V2               [/etc/avrdude.conf:437]
      avrisp   = Atmel AVR ISP                  [/etc/avrdude.conf:431]
      jtagkey  = Amontec JTAGKey, JTAGKey-Tiny and JTAGKey2 [/etc/avrdude.conf:408]
      2232HIO  = FT2232H based generic programmer [/etc/avrdude.conf:382]
      avrftdi  = FT2232D based generic programmer [/etc/avrdude.conf:355]
      arduino  = Arduino                        [/etc/avrdude.conf:335]
      wiring   = Wiring                         [/etc/avrdude.conf:329]

- astuce pour souder des composants qui tombent du fait de la gravité: faire
  une petite soudure sale d'une main (en mettant l'étain sur le fer avant) et
  en tenant le composant avec l'autre main.
+ Attention: le fichier .hex est un fichier ASCII, pas un fichier binaire !
  pour le lire, lancer simplement "cat blink_led.hex" et non pas
  "od -h blink_led.hex" => c'est pour ça que le fichier .hex et le dump ne corresponda pas la dernière fois...
+ Attention: le fichier .hex n'est pas une version ASCII hexa du code brut présent dans la flash du MCU;
  il y a des métadonnées (headers, des checksums, ...) !!
  cf. http://en.wikipedia.org/wiki/Intel_HEX
- avrdude -t
  erase
  dump flash 0 255    (dump la flash de l'adresse 0 à ...)
+ LIRE (et non ÉCRIRE) la flash:
  avrdude ... -U flash:r:flash.bin:r
- Attention: sur
  http://www.micahcarrick.com/tutorials/avr-microcontroller-tutorial/getting-started.html,
  la LED est placée dans l'autre sens !

